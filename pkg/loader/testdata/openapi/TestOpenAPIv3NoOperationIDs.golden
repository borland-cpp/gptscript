types.ToolSet{
	":": types.Tool{
		ToolDef: types.ToolDef{Parameters: types.Parameters{
			Description: "This is a tool set for the Swagger Petstore OpenAPI spec",
			ModelName:   "gpt-4o",
			Export: []string{
				"get_pets",
				"post_pets",
				"get_pets_petId",
			},
		}},
		ID: ":",
		ToolMapping: map[string][]types.ToolReference{
			"get_pets": {{
				Reference: "get_pets",
				ToolID:    ":get_pets",
			}},
			"get_pets_petId": {{
				Reference: "get_pets_petId",
				ToolID:    ":get_pets_petId",
			}},
			"post_pets": {{
				Reference: "post_pets",
				ToolID:    ":post_pets",
			}},
		},
		LocalTools: map[string]string{
			"":               ":",
			"get_pets":       ":get_pets",
			"get_pets_petid": ":get_pets_petId",
			"post_pets":      ":post_pets",
		},
	},
	":get_pets": types.Tool{
		ToolDef: types.ToolDef{
			Parameters: types.Parameters{
				Name:        "get_pets",
				Description: "List all pets",
				ModelName:   "gpt-4o",
				Arguments: &openapi3.Schema{
					Type: &openapi3.Types{
						"object",
					},
					Required: []string{},
					Properties: openapi3.Schemas{"limit": &openapi3.SchemaRef{Value: &openapi3.Schema{
						Type:        &openapi3.Types{"integer"},
						Format:      "int32",
						Description: "How many items to return at one time (max 100)",
						Max:         valast.Ptr(float64(100)),
					}}},
				},
			},
			Instructions: `#!sys.openapi '{"server":"http://petstore.swagger.io/v1","path":"/pets","method":"GET","bodyContentMIME":"","apiKeyInfos":null,"queryParameters":[{"name":"limit","style":"","explode":null}],"pathParameters":null,"headerParameters":null,"cookieParameters":null}'`,
		},
		ID:          ":get_pets",
		ToolMapping: map[string][]types.ToolReference{},
		LocalTools: map[string]string{
			"":               ":",
			"get_pets":       ":get_pets",
			"get_pets_petid": ":get_pets_petId",
			"post_pets":      ":post_pets",
		},
		Source: types.ToolSource{LineNo: 1},
	},
	":get_pets_petId": types.Tool{
		ToolDef: types.ToolDef{
			Parameters: types.Parameters{
				Name:        "get_pets_petId",
				Description: "Info for a specific pet",
				ModelName:   "gpt-4o",
				Arguments: &openapi3.Schema{
					Type:     &openapi3.Types{"object"},
					Required: []string{"petId"},
					Properties: openapi3.Schemas{"petId": &openapi3.SchemaRef{Value: &openapi3.Schema{
						Type:        &openapi3.Types{"string"},
						Description: "The id of the pet to retrieve",
					}}},
				},
			},
			Instructions: `#!sys.openapi '{"server":"http://petstore.swagger.io/v1","path":"/pets/{petId}","method":"GET","bodyContentMIME":"","apiKeyInfos":null,"queryParameters":null,"pathParameters":[{"name":"petId","style":"","explode":null}],"headerParameters":null,"cookieParameters":null}'`,
		},
		ID:          ":get_pets_petId",
		ToolMapping: map[string][]types.ToolReference{},
		LocalTools: map[string]string{
			"":               ":",
			"get_pets":       ":get_pets",
			"get_pets_petid": ":get_pets_petId",
			"post_pets":      ":post_pets",
		},
		Source: types.ToolSource{LineNo: 3},
	},
	":post_pets": types.Tool{
		ToolDef: types.ToolDef{
			Parameters: types.Parameters{
				Name:        "post_pets",
				Description: "Create a pet",
				ModelName:   "gpt-4o",
				Arguments: &openapi3.Schema{
					Type:     &openapi3.Types{"object"},
					Required: []string{},
					Properties: openapi3.Schemas{"requestBodyContent": &openapi3.SchemaRef{Value: &openapi3.Schema{
						Type: &openapi3.Types{"object"},
						Required: []string{
							"id",
							"name",
						},
						Properties: openapi3.Schemas{
							"id": &openapi3.SchemaRef{
								Value: &openapi3.Schema{
									Type: &openapi3.Types{
										"integer",
									},
									Format: "int64",
								},
							},
							"name": &openapi3.SchemaRef{Value: &openapi3.Schema{Type: &openapi3.Types{"string"}}},
							"tag":  &openapi3.SchemaRef{Value: &openapi3.Schema{Type: &openapi3.Types{"string"}}},
						},
					}}},
				},
			},
			Instructions: `#!sys.openapi '{"server":"http://petstore.swagger.io/v1","path":"/pets","method":"POST","bodyContentMIME":"application/json","apiKeyInfos":null,"queryParameters":null,"pathParameters":null,"headerParameters":null,"cookieParameters":null}'`,
		},
		ID:          ":post_pets",
		ToolMapping: map[string][]types.ToolReference{},
		LocalTools: map[string]string{
			"":               ":",
			"get_pets":       ":get_pets",
			"get_pets_petid": ":get_pets_petId",
			"post_pets":      ":post_pets",
		},
		Source: types.ToolSource{LineNo: 2},
	},
}
